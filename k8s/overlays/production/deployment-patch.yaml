apiVersion: apps/v1
kind: Deployment
metadata:
  name: llm-rag
spec:
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      terminationGracePeriodSeconds: 60
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: llm-rag
        image: llm-rag:latest
        imagePullPolicy: Always
        resources:
          requests:
            memory: "1Gi"
            cpu: "1000m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        # Production-specific settings: longer timeouts for stability
        livenessProbe:
          initialDelaySeconds: 60
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          timeoutSeconds: 3
          failureThreshold: 2
      # Use persistent storage with higher reliability for production
      volumes:
      - name: models
        persistentVolumeClaim:
          claimName: models-pvc-prod
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - llm-rag
            topologyKey: "kubernetes.io/hostname"
