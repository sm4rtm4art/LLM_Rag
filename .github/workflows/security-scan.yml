name: Comprehensive Security Scan

permissions:
  actions: read
  contents: read
  security-events: write

on:
  schedule:
    # Run weekly on Sunday at 1:00 AM UTC
    - cron: "0 1 * * 0"
  workflow_dispatch:
    # Allow manual triggering of the workflow

env:
  PYTHON_VERSION: "3.12"

jobs:
  full-security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Safety vulnerability scan
        uses: pyupio/safety-action@v1
        with:
          api-key: ${{ secrets.SAFETY_API_KEY }}
          args: --full-report

      - uses: actions/setup-python@v4
        with:
          python-version: "${{ env.PYTHON_VERSION }}"

      - run: python -m venv .venv && echo "$GITHUB_WORKSPACE/.venv/bin" >> $GITHUB_PATH
      - run: .venv/bin/python -m pip install bandit
      - run: bandit -r src -c pyproject.toml -f json -o bandit.json
      - uses: actions/upload-artifact@v4
        with:
          name: bandit-results
          path: bandit.json

      # Comprehensive Trivy filesystem scan
      - name: Cache Trivy
        uses: actions/cache@v4
        with:
          path: ~/.cache/trivy
          key: trivy-security-${{ github.workflow }}-${{ github.ref_name }}-${{ hashFiles('Dockerfile') }}-${{ github.run_id }}
          restore-keys: |
            trivy-security-${{ github.workflow }}-${{ github.ref_name }}-
            trivy-security-${{ github.workflow }}-

      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.48.3

      - name: Run comprehensive Trivy filesystem scan
        env:
          TRIVY_NO_PROGRESS: true
          TRIVY_CACHE_DIR: ~/.cache/trivy
        run: |
          trivy --cache-dir ~/.cache/trivy image --download-db-only
          # Comprehensive scan with all scanners and checking for all severity levels
          trivy fs --format sarif --output trivy-full-results.sarif --severity CRITICAL,HIGH,MEDIUM,LOW .

      - name: Upload comprehensive Trivy SARIF results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-full-results.sarif
          category: trivy-comprehensive

      # Additional security scans could be added here:
      # - Secret scanning
      # - SAST analysis
      # - Dependency scanning

      - name: Generate security summary
        run: |
          echo "# Security Scan Results" > security-summary.md
          echo "## Timestamp: $(date)" >> security-summary.md
          echo "## Repository: ${{ github.repository }}" >> security-summary.md
          echo "## Branch: ${{ github.ref }}" >> security-summary.md
          echo "" >> security-summary.md

          # Add basic statistics from scan results
          echo "Run ID: ${{ github.run_id }}" >> security-summary.md
          echo "Scan URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> security-summary.md

          # If we wanted to extract actual vulnerability counts, we would need to parse the SARIF files here

      - name: Upload security summary
        uses: actions/upload-artifact@v4
        with:
          name: security-summary
          path: security-summary.md
