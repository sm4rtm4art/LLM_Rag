name: Deploy to Production

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to deploy (leave empty for latest)"
        required: false
        type: string

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    # Note: Create 'production' environment in GitHub repository settings before uncommenting
    # environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4

      - name: Configure kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_PROD }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Determine version to deploy
        id: version
        run: |
          if [ -z "${{ github.event.inputs.version }}" ]; then
            # Get latest version from Docker Hub
            VERSION=$(curl -s -H "Authorization: Bearer ${{ secrets.DOCKERHUB_TOKEN }}" \
              "https://hub.docker.com/v2/repositories/${{ secrets.DOCKERHUB_USERNAME }}/llm-rag/tags/" | \
              jq -r '.results[0].name')
          else
            VERSION="${{ github.event.inputs.version }}"
          fi
          echo "Using version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Update deployment configuration
        run: |
          # Replace image tag and username in deployment file
          sed -i "s|\${DOCKERHUB_USERNAME}/llm-rag:.*|${{ secrets.DOCKERHUB_USERNAME }}/llm-rag:${{ steps.version.outputs.version }}|g" k8s/deployment.yaml

          # Set environment-specific variables
          sed -i "s|ENVIRONMENT: \".*\"|ENVIRONMENT: \"production\"|g" k8s/deployment.yaml

          # Apply the configuration
          kubectl apply -f k8s/deployment.yaml
          kubectl rollout status deployment/llm-rag
